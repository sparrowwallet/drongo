package com.sparrowwallet.drongo.dns;

import com.sparrowwallet.drongo.Utils;
import com.sparrowwallet.drongo.uri.BitcoinURIParseException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.util.Optional;

public class DnsPaymentResolverTest {
    @Test
    public void resolverTest() throws DnsPaymentValidationException, IOException, BitcoinURIParseException {
        byte[] proofChain = Utils.hexToBytes("00002e000100013ccb0113003008000002a30068993280687d83004f66005a48a604886288cc78c2a35e48816b7a182a349f397f2cd4c1bfa6de634acc9b9b0d2236fd8f257fa8641ae46da7ca17a697c965beabb5477ea6d0cc198b77c8cb9398f8f6fd36c7dc32439409625209b7c3d12108f2c973ea735f764ee629135ed67f016e63949a84e1f120b5146a27221180a0fbd0d632cc900c488b709260f2d479e6d787f2f9fa31222cacdbb696ddc3789744c691d27a8be4486fd7a74b51e417dfb9a9ba8f148f468c536debb4a7dc3803ea6213c55c3efd19cbf29059e5e460803e9656bdac7feacc38bf2bb8a9a3cbc5025841c1b71a58246cab007209bf2f22d4fdd4b80fe6d3bce9e5d2bb80df1949d62f09feb3a5bffe2a1bc6ab000030000100013ccb01080100030803010001b11b182a464c3adc6535aa59613bda7a61cac86945c20b773095941194f4b9f516e8bd924b1e50e3fe83918b51e54529d4e5a1e45303df8462241d5e05979979ae5bf9c6c598c08a496e17f3bd3732d5aebe62667b61db1bbe178f27ac99408165a230d6aee78348e6c67789541f845b2ada96667f8dd16ae44f9e260c4a138b3bb1015965ebe609434a06464bd7d29bac47c3017e83c0f89bca1a9e3bdd0813715f3484292df589bc632e27d37efc02837cb85d770d5bd53a36edc99a8294771aa93cf22406f5506c8cf850ed85c1a475dee5c2d3700b3f5631d903524b849995c20cb407ed411f70b428ae3d642716fe239335aa961a752e67fb6dca0bf729000030000100013ccb01080100030803010001b6aec4b48567e2925a2d9c4fa4c96e6dddf86215a9bd8dd579c38ccb1199ed1be89946a7f72fc2633909a2792d0eed1b5afb2ee4c78d865a76d6cd9369d999c96af6be0a2274b8f2e9e0a0065bd20257570f08bc14c16f5616426881a83dbce6926e391c138a2ec317efa7349264de2e791c9b7d4a6048ee6eedf27bf1ece398ff0d229f18377cb1f6b98d1228ef217b8146c0c73851b89a6fc37c621ca187e16428a743ffea0072e185ef93e39525cee3ad01e0c94d2e511c8c313322c29ab91631e1856049a36898684c3056e5997473816fb547acb0be6e660bdfa89a5cb28b3669d8625f3f018c7b3b8a4860e774ee8261811ce7f96c461bc162c1a374f3000030000100013ccb01080101030803010001acffb409bcc939f831f7a1e5ec88f7a59255ec53040be432027390a4ce896d6f9086f3c5e177fbfe118163aaec7af1462c47945944c4e2c026be5e98bbcded25978272e1e3e079c5094d573f0e83c92f02b32d3513b1550b826929c80dd0f92cac966d17769fd5867b647c3f38029abdc48152eb8f207159ecc5d232c7c1537c79f4b7ac28ff11682f21681bf6d6aba555032bf6f9f036beb2aaa5b3778d6eebfba6bf9ea191be4ab0caea759e2f773a1f9029c73ecb8d5735b9321db085f1b8e2d8038fe2941992548cee0d67dd4547e11dd63af9c9fc1c5466fb684cf009d7197c2cf79e792ab501e6a8a1ca519af2cb9b5f6367e94c0d47502451357be1b5000030000100013ccb01080101030803010001af7a8deba49d995a792aefc80263e991efdbc86138a931deb2c65d5682eab5d3b03738e3dfdc89d96da64c86c0224d9ce02514d285da3068b19054e5e787b2969058e98e12566c8c808c40c0b769e1db1a24a1bd9b31e303184a31fc7bb56b85bbba8abc02cd5040a444a36d47695969849e16ad856bb58e8fac8855224400319bdab224d83fc0e66aab32ff74bfeaf0f91c454e6850a1295207bbd4cdde8f6ffb08faa9755c2e3284efa01f99393e18786cb132f1e66ebc6517318e1ce8a3b7337ebb54d035ab57d9706ecd9350d4afacd825e43c8668eece89819caf6817af62dc4fbd82f0e33f6647b2b6bda175f14607f59f4635451e6b27df282ef73d8703636f6d00002b00010000ba3800244d060d028acbb0cd28f41250a80a491389424d341522d946b0da0c0291f2d3d771d7805a03636f6d00002e00010000ba380113002b08010001518068911140687fdfb0b569006748fcc8daa42fbdbe3e9103f4c3ae041ac72e5a1ffd161004fbf2f1b2b30f82fe31e927371b70866108bd55acab8a5afa84fa3a232518b0e952af3dfad9559bcb4e82b63fbb4f8542a5ebd5d047dad5b2024bde85c4fc4205a0984735ae96cba6d6f7bace837d40b0bf7351ead906105c9459fba5e9c6cad5068b4f91908f601eabea293be0de72f2c06e9392ba60c652ebdb3ce701d547f8c31fb23a2bc44a733dbeb1af210f758cdd4c8d748522c5f074615b750ec657c168f47e42af3292325506ed16c8020f83670891c3ca7bbbdd8c467f25e0e4644a3f9e1674922819726823ca7f183d1346840899cdbe7314a2336926940ea036f6b278b7a7ada7b003636f6d00002e000100002424005700300d010001518068920efb687e474f4d0603636f6d00b2e671a909bab6910567084b8347cb199b924a4acf9e1a2602ba0adaa3b056890609bd88ee767161672bbe89466e2c035c0bce3a755f33b910047fa27a90b9c203636f6d00003000010000242400440100030df17b60fb56d522f8634153e785c0a978532ea76de39d34bb356d3d042e07f29f7b992176cc83acef7b78ea750425203b18f2b8228b3cdd2bc7eb13c3e3035a7e03636f6d00003000010000242400440101030db71f0465101ddbe2bf0c9455d12fa16c1cda44f4bf1ba2553418ad1f3aa9b06973f21b84eb532cf4035ee8d4832ca26d89306a7d32560c0cb0129d450ac108350d73706172726f7777616c6c657403636f6d00002b00010000546000243dc40d0256040d991c1075c4a8555445f9a5ce52ce6801aaf45d3e87663e7fbd68bc312b0d73706172726f7777616c6c657403636f6d00002b0001000054600024cf3b0d02656da59836422f5e198e73fc35e6a89bc0838deaac565e71a19804fc1250e4ce0d73706172726f7777616c6c657403636f6d00002e0001000054600057002b0d020001518068876196687e16ae504103636f6d00c23f50cb0c009ffaf23dfb105a24110c95a41de00c100bc35305c870fcfa6d6ed94581f64199c9328f748a1f04889c92c7122f4e0d6611e8653a608705348fc80d73706172726f7777616c6c657403636f6d00002e000100000a80006500300d0200000e106891efe0687e29603dc40d73706172726f7777616c6c657403636f6d002b96ad4cdc8619f89d74317373ff0b40b9de3132cf957ee57c653c204d1d3611d6264d6baefb1c45c1fe2d499cc77587183f4900a1f0512b0478a60e4944c0410d73706172726f7777616c6c657403636f6d000030000100000a8000440100030d24c8364b3f942b0062f1c63880b959b2e7827f1cffff8d5e38f7fde1b22d621d1c4a0cd9a9b0c6c70b1c94543ccdc5502481aebd6e2b44656c9ea339ac81e83b0d73706172726f7777616c6c657403636f6d000030000100000a8000440100030d95676c7b25e7794a8a7e4b19ed638e47aca735d02ce2dd08b2886c20c31a2cb9e7cc8b85023a46eeb637020119dcaa6bbc0747e12340fa813199799de579de8a0d73706172726f7777616c6c657403636f6d000030000100000a8000440101030db0372521337fd56d8b62e917b7866b7faa753d25322e12b52a3eb5ff9f4c9f66227f508fe33ba139f2f1354fe3ded6d3da76d49be926198dc2940f2c5282c7fe0d73706172726f7777616c6c657403636f6d000030000100000a8000440101030dddf917743f320a49f6218d706218b6cae574f1db7688555e0d5f0455405d6865993f0147fb4b33baa207b28d232c9e70419ddcae72050311098cd4cfaa07969b0563726169670475736572105f626974636f696e2d7061796d656e740d73706172726f7777616c6c657403636f6d0000100001000002fe003332626974636f696e3a6263317177746865343378657561736b6c636c71346b766872656c75763368753932727a656a34326a730563726169670475736572105f626974636f696e2d7061796d656e740d73706172726f7777616c6c657403636f6d00002e0001000002fe006500100d0500000e106891efe0687e2960bb260d73706172726f7777616c6c657403636f6d00e7ae93d23b747737554c4d52dd1ec0f58c411c6a474da46c3c24d0db970d86e91bf91b5eabeb1ed59121678ef534a25a6f75ce0588e6524439c11d208f301d46");
        DnsPaymentResolver resolver = new DnsPaymentResolver("craig@sparrowwallet.com");
        Optional<DnsPayment> dnsPayment = resolver.resolve(proofChain);
        if(dnsPayment.isPresent()) {
            Assertions.assertEquals(dnsPayment.get().bitcoinURI().getAddress().toString(), "bc1qwthe43xeuasklclq4kvhreluv3hu92rzej42js");
        } else {
            Assertions.fail("Could not resolve proof chain");
        }
    }
}
